@model IEnumerable<RWAEShopMVC.ViewModels.ProductVM>
@{
    ViewData["Title"] = "Shop";
}

<div class="container mt-4">
 
    <!-- FILTER/SORT FORM -->
    <form asp-action="Shop" method="get" class="mb-3 d-flex align-items-end gap-2 flex-wrap">
        <div class="flex-grow-1">
            <input type="text" class="form-control" id="q" name="q" value="@ViewData["CurrentFilter"]" placeholder="Search text" />
        </div>
        <div>
            @Html.DropDownList("categoryId", (SelectList)ViewBag.CategoryList, "Category", new { @class = "form-select", id = "categoryId" })
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </form>

    <!-- PRODUCT GRID -->
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4 mb-4" style="max-height: 850px; overflow-y: auto;">
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm" style="min-height: 430px;">
                        <div class="d-flex justify-content-center align-items-center" style="height:270px; background:#f3f3f3;">
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="@item.ImageUrl" style="max-height:240px; max-width:95%; width:auto; object-fit:contain;" alt="Product image" />
                            }
                            else
                            {
                                <img src="~/img/no-image.png" style="max-height:240px; max-width:95%; width:auto; object-fit:contain;" alt="No image" />
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title text-primary mb-2">@item.Name</h5>
                            <div class="mb-1 text-muted small">@item.CategoryName</div>
                            <div class="fw-semibold mb-1 fs-5">@item.Price.ToString("0.00") €</div>
                            <div class="mb-2" style="font-size:1.06em; min-height:40px;">@item.ProductDescription</div>
                        </div>
                        <div class="card-footer bg-white border-0 d-flex justify-content-between">
                            <a asp-action="Details" asp-route-id="@item.IdProduct" class="btn btn-sm btn-outline-info">Details</a>
                            <form asp-controller="Order" asp-action="AddToCart" method="post" class="d-flex align-items-center mb-0" style="gap:5px;">
                                <input type="hidden" name="productId" value="@item.IdProduct" />
                                <input type="number" name="quantity" value="1" min="1" class="form-control form-control-sm" style="width: 55px;" />
                                <button type="submit" class="btn btn-success btn-sm">+</button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col">
                <div class="alert alert-info text-center">No products found.</div>
            </div>
        }
    </div>


    <!-- PAGINATION BOTTOM -->
    @if (ViewData["TotalPages"] != null && Convert.ToInt32(ViewData["TotalPages"]) > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-end">
                <li class="page-item @( ((int)ViewData["Page"] == 1) ? "disabled" : "" )">
                    <a class="page-link" href="@Url.Action("Shop", new {
                            q = ViewData["CurrentFilter"],
                            categoryId = ViewData["CurrentCategory"],
                            page = (int)ViewData["Page"] - 1,
                            pageSize = ViewData["PageSize"]
                        })">&lt; Previous</a>
                </li>
                @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
                {
                    <li class="page-item @( ((int)ViewData["Page"] == i) ? "active" : "" )">
                        <a class="page-link" href="@Url.Action("Shop", new {
                            q = ViewData["CurrentFilter"],
                            categoryId = ViewData["CurrentCategory"],
                            page = i,
                            pageSize = ViewData["PageSize"]
                        })">@i</a>
                    </li>
                }
                <li class="page-item @( ((int)ViewData["Page"] == (int)ViewData["TotalPages"]) ? "disabled" : "" )">
                    <a class="page-link" href="@Url.Action("Shop", new {
                        q = ViewData["CurrentFilter"],
                        categoryId = ViewData["CurrentCategory"],
                        page = (int)ViewData["Page"] + 1,
                        pageSize = ViewData["PageSize"]
                    })">Next &gt;</a>
                </li>
            </ul>
        </nav>
    }
</div>
