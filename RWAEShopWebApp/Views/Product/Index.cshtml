@using RWAEShopWebApp.ViewModels
<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold text-primary mb-0">Product List</h2>
        <a asp-action="Create" class="btn btn-success shadow-sm">+ Add New</a>
    </div>

    <form asp-action="Index" method="get" class="mb-4 row gx-2 gy-2 align-items-end">
        <div class="col-sm-6 col-md-4">
            <label for="q" class="form-label mb-1">Search</label>
            <input type="text" class="form-control shadow-sm" id="q" name="q" value="@ViewData["CurrentFilter"]" placeholder="Search by name..." />
        </div>
        <div class="col-sm-4 col-md-3">
            <label for="categoryId" class="form-label mb-1">Category</label>
            @Html.DropDownList("categoryId", (SelectList)ViewBag.CategoryList, "All", new { @class = "form-select shadow-sm", id = "categoryId" })
        </div>
        <div class="col-sm-2 col-md-2">
            <button type="submit" class="btn btn-primary w-100 shadow-sm">Filter</button>
        </div>
    </form>

    <div style="max-height: 720px; overflow-y: auto;">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow border-0" style="min-height: 410px;">
                        <div class="d-flex justify-content-center align-items-center rounded-top" style="height: 240px; background: #f8f9fa;">
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="@item.ImageUrl" class="img-fluid" style="max-height: 210px; width:auto; object-fit:contain;" alt="Product image" />
                            }
                            else
                            {
                                <img src="~/img/no-image.png" class="img-fluid" style="max-height: 210px; width:auto; object-fit:contain;" alt="No image" />
                            }
                        </div>
                        <div class="card-body d-flex flex-column pb-2">
                            <h5 class="card-title text-primary fw-bold mb-1 text-truncate">@item.Name</h5>
                            <div class="text-muted small mb-2 text-truncate">@item.CategoryName</div>
                            <div class="fw-bold mb-2 fs-5">@item.Price.ToString("0.00") €</div>
                            <div class="mb-2" style="font-size:1.06em; min-height:40px;">@item.ProductDescription</div>
                        </div>
                        <div class="card-footer bg-white border-0 d-flex justify-content-between pt-2">
                            <a asp-action="Details" asp-route-id="@item.IdProduct" class="btn btn-sm btn-outline-info px-3">Details</a>
                            <a asp-action="Edit" asp-route-id="@item.IdProduct" class="btn btn-sm btn-outline-primary px-3">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.IdProduct" class="btn btn-sm btn-outline-danger px-3">Delete</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    @if ((int)ViewData["TotalPages"] > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mt-4">
                <li class="page-item @( ((int)ViewData["Page"] == 1) ? "disabled" : "" )">
                    <a class="page-link" href="@Url.Action("Index", new {
                            q = ViewData["CurrentFilter"],
                            categoryId = ViewData["CurrentCategory"],
                            page = (int)ViewData["Page"] - 1,
                            pageSize = ViewData["PageSize"]
                        })">Previous</a>
                </li>
                @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
                {
                    <li class="page-item @( ((int)ViewData["Page"] == i) ? "active" : "" )">
                        <a class="page-link" href="@Url.Action("Index", new {
                            q = ViewData["CurrentFilter"],
                            categoryId = ViewData["CurrentCategory"],
                            page = i,
                            pageSize = ViewData["PageSize"]
                        })">@i</a>
                    </li>
                }
                <li class="page-item @( ((int)ViewData["Page"] == (int)ViewData["TotalPages"]) ? "disabled" : "" )">
                    <a class="page-link" href="@Url.Action("Index", new {
                        q = ViewData["CurrentFilter"],
                        categoryId = ViewData["CurrentCategory"],
                        page = (int)ViewData["Page"] + 1,
                        pageSize = ViewData["PageSize"]
                    })">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>
